[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "smokeshow/version.py"

[project]
name = "smokeshow"
description = "Deploy ephemeral websites."
authors = [{name = "Samuel Colvin", email = "s@muelcolvin.com"}]
version = "0.5.0"
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Environment :: Web Environment",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.24",
    "typer>=0.8.0",
]

[project.urls]
Homepage = "https://smokeshow.helpmanual.io"
Documentation = "https://smokeshow.helpmanual.io"
Funding = "https://github.com/sponsors/samuelcolvin"
Source = "https://github.com/samuelcolvin/smokeshow"
Changelog = "https://github.com/samuelcolvin/smokeshow/releases"

[project.scripts]
smokeshow = "smokeshow.main:cli"

[dependency-groups]
dev = [
    "aiohttp>=3.10.11",
    "coverage>=7.6.1",
    "dirty-equals>=0.8.0",
    "pyright>=1.1.391",
    "pytest>=8.3.4",
    "pytest-mock>=3.14.0",
    "pytest-pretty>=1.2.0",
    "ruff>=0.8.6",
]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
extend-select = [
    "Q",
    "RUF100",
    "C90",
    "UP",
    "I",
]
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { combine-as-imports = true, known-first-party = ["pydantic_ai"] }
mccabe = { max-complexity = 15 }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"


[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "error",
    "ignore::aiohttp.web_exceptions.NotAppKeyWarning",
]

[tool.coverage.run]
source = ["smokeshow"]
omit = ["smokeshow/__main__.py"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "if TYPE_CHECKING:",
    "@overload",
]

[tool.pyright]
typeCheckingMode = "strict"
reportUnusedFunction = false
reportUnnecessaryTypeIgnoreComment = true
include = ["smokeshow"]
venvPath = ".venv"
